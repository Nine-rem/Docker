version: '3.8'

services:
 database:
  image: mysql:5.7
  container_name: pcs_database
  env_file:
   - .env
  environment:
   MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
   MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
  secrets:
   - mysql_root_password
   - mysql_password
  ports:
   - "3306:3306"
  volumes:
   - mysql_data:/var/lib/mysql
   - ./pcs.sql:/docker-entrypoint-initdb.d/pcs.sql
  healthcheck:
   test: ["CMD-SHELL", "mysqladmin ping -h localhost"]
   interval: 10s
   timeout: 5s
   retries: 3
  networks:
   - pcs-network

 api:
  image: kirtikaasn/app_api:v1.0
#  build:
#   context: ./api
#   dockerfile: Dockerfile
  container_name: pcs_backend
  env_file:
   - .env
  environment:
   MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password
   MYSQL_PASSWORD_FILE: /run/secrets/mysql_password
  secrets:
   - mysql_password
   - mysql_root_password
  volumes:
   - ./start.sh:/usr/src/app/start.sh
  entrypoint: ["/bin/sh", "/usr/src/app/start.sh"]
  command: [""]
  depends_on:
    database:
     condition: service_healthy
  ports:
   - "5000:5000"
  networks:
   - pcs-network

 client:
  image: kirtikaasn/app_client:v1.0
#  build:
#   context: ./client
#   dockerfile: Dockerfile
  container_name: pcs_frontend
  depends_on:
   - api
  ports:
   - "80:80"
  networks:
   - pcs-network

volumes:
 mysql_data:

networks:
 pcs-network:
  driver: bridge

secrets:
 mysql_root_password:
  file: ./secrets/mysql_root_password.secret
 mysql_password:
  file: ./secrets/mysql_password.secret